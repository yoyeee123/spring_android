<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neuedu.dao.UserInfoMapper" >
  <resultMap id="BaseResultMap" type="com.neuedu.pojo.UserInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="ip" property="userIp" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="question" property="question" jdbcType="VARCHAR" />
    <result column="answer" property="answer" jdbcType="VARCHAR" />
      <result column="ip" property="userIp" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />

  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from neuedu_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.neuedu.pojo.UserInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into neuedu_user (id, username, password, 
      email, phone, question, 
      answer, role, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{question,jdbcType=VARCHAR}, 
      #{answer,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER}, now(),
      now())
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.pojo.UserInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update neuedu_user
    set

    <if test="email!=null">
      email = #{email,jdbcType=VARCHAR},
    </if>
    <if test="phone!=null">
      phone = #{phone,jdbcType=VARCHAR},
    </if>
    <if test="question!=null">
      question = #{question,jdbcType=VARCHAR},
    </if>
    <if test="answer!=null">
      answer = #{answer,jdbcType=VARCHAR},
    </if>
    <if test="role!=null">
      role = #{role,jdbcType=INTEGER},
    </if>

    <if test="userIp!=null">
      ip=#{userIp},
    </if>
      update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--根据用户名修改密码-->
  <update id="updateByUserName" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update neuedu_user
    set
    password = #{passwordNew,jdbcType=VARCHAR},update_time = now()
    where username = #{username,jdbcType=INTEGER}
  </update>

  <!--根据用户名和旧密码修改密码-->
  <update id="updateByUserNameAndPasswordOld" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update neuedu_user
    set
    password = #{passwordNew,jdbcType=VARCHAR},update_time = now()
    where username = #{username,jdbcType=INTEGER} and password=#{passwordOld}
  </update>

  <!--根据用户ID修改信息-->
  <update id="updateByID" parameterType="com.neuedu.pojo.UserInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update neuedu_user
    <set>
      <if test="@com.neuedu.util.OpinionUtils@emptyString(email)">
    email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="@com.neuedu.util.OpinionUtils@emptyString(phone)">
    phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="@com.neuedu.util.OpinionUtils@emptyString(question)">
    question = #{question,jdbcType=VARCHAR},
      </if>
      <if test="@com.neuedu.util.OpinionUtils@emptyString(answer)">
    answer = #{answer,jdbcType=VARCHAR},
      </if>
    update_time = now()
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, username, password, ip,email, phone, question, answer, role, create_time,
    update_time
    from neuedu_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, username, password, ip,email, phone, question, answer, role, create_time,
    update_time
    from neuedu_user
  </select>

  <!--根据用户名查找用户-->
  <select id="checkUser" resultType="java.lang.Integer" parameterType="java.lang.String">
    select count(1)
    from neuedu_user
    where username = #{username}
  </select>

  <!--根据用户名查找用户-->
  <select id="forgetUserName" resultMap="BaseResultMap" parameterType="java.lang.String">
    select id, username, ip,password, email, phone, question, answer, role, create_time,
    update_time
    from neuedu_user
    where username = #{username}
  </select>

  <!--根据邮箱查找用户-->
  <select id="checkEmail" resultType="java.lang.Integer" parameterType="java.lang.String">
    select count(1)
    from neuedu_user
    where email = #{email}
  </select>

  <!--根据用户名和密码查找用户-->
  <select id="selectByUserNameAndPassword" resultMap="BaseResultMap" parameterType="map">
    select id, username, password,ip, email, phone, question, answer, role, create_time,
    update_time
    from neuedu_user
    where username = #{username} and password = #{password}
  </select>

  <!--根据用户名、密码问题、问题答案查找用户-->
  <select id="selectByUserNameAndQuestionAndAnswer" resultType="java.lang.Integer" parameterType="map">
    select count(1)
    from neuedu_user
    where username = #{username} and question = #{question} and answer = #{answer}
  </select>
</mapper>