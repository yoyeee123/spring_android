package com.neuedu.dao;

import com.neuedu.pojo.Product;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface ProductMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_product
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_product
     *
     * @mbggenerated
     */
    int insert(Product record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_product
     *
     * @mbggenerated
     */
    Product selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_product
     *
     * @mbggenerated
     */
    List<Product> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_product
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(Product record);

    /*产品搜索及动态排序List*/
    /*categoryId非空_keyword非空_categoryId下面有子类_查询所有子类包含关键词的商品*/
    List<Product> selectByCategoryIdAndKeywordAndData(@Param("categoryId") Integer categoryId, @Param("keyword") String keyword,@Param("data") List data);

    /*categoryId非空_keyword非空_categoryId下面没有子类_查询当前分类包含关键词的商品*/
    List<Product> selectByCategoryIdAndKeyword(@Param("categoryId") Integer categoryId, @Param("keyword") String keyword);

    /*categoryId非空_keyword空_categoryId下面有子类_查询所有子类所有商品*/
    List<Product> selectByCategoryIdAndData(@Param("categoryId") Integer categoryId, @Param("data") List data);

    /*categoryId非空_keyword空_categoryId下面没有子类_查询当前分类所有的商品*/
    List<Product> selectByCategoryId(Integer categoryId);//根据商品类型查询数据

    /*categoryId空_keyword非空_查询所有分类包含关键词的商品*/
    List<Product> selectByKeyword(String keyword);//根据关键词查询数据

    /*根据商品id查询最新商品*/
    Product selectByIdAndIs_New(@Param("productId") Integer productId, @Param("is_new")Integer is_new);
    /*根据商品id查询最热商品*/
    Product selectByIdAndIs_Hot(@Param("productId") Integer productId, @Param("is_hot")Integer is_hot);
    /*根据商品id查询banner商品*/
    Product selectByIdAndIs_Banner(@Param("productId") Integer productId, @Param("is_banner")Integer is_banner);

    /*根据最新或最热或banner查询商品*/
    List<Product> selectBys_NewAndIs_HotAndIs_Banner(@Param("is_new")Integer is_new,@Param("is_hot")Integer is_hot,@Param("is_banner")Integer is_banner);





}